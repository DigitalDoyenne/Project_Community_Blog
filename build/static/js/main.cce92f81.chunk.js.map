{"version":3,"sources":["common/Header.js","common/NotFound.js","home/Card.js","api/index.js","common/ErrorMessage.js","home/CardList.js","user/UserProfile.js","user/NoPostSelectedMessage.js","user/Post.js","user/PostLink.js","user/PostList.js","user/PostsNav.js","user/User.js","App.js","index.js"],"names":["Header","className","NotFound","to","Card","user","posts","id","name","length","deletePost","ignoreAbortError","fetchUsersWithPosts","fetchUserWithPosts","delegate","a","delegateArguments","apply","postId","signal","url","fetch","method","response","json","userId","status","Error","fetchPostsForUser","fetchUsers","users","Promise","all","map","then","ErrorMessage","error","children","style","color","message","CardList","useState","setUsers","undefined","setError","useEffect","abortController","AbortController","catch","abort","list","key","UserProfile","role","aria-labelledby","username","email","phone","company","website","NoPostSelectedMessage","Post","useRouteMatch","params","post","find","Number","history","useHistory","handleDelete","window","confirm","push","title","body","onClick","PostLink","PostList","postLinks","path","PostsNav","aria-label","User","setUser","App","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cce92f81.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Header = () => (\n  <div className=\"jumbotron jumbotron-fluid bg-warning\">\n    <div className=\"container\">\n      <h1 className=\"display-4\">Community Blog</h1>\n      <p className=\"lead\">Check out the posts of our community members.</p>\n    </div>\n  </div>\n);\n\nexport default Header;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n/*\n  TODO: Change the <a> below to a <Link> to the home page\n*/\n\nexport const NotFound = () => (\n  <main className=\"container\">\n    <p>Page not found!</p>\n    <p>\n      <Link to={\"/\"}>Return Home</Link>\n    </p>\n  </main>\n);\n\nexport default NotFound;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n/*\n  TODO: Change the link below to go to the user route, using the user's ID.\n  /users/:userId\n*/\n\nexport const Card = ({ user = { posts: [] } }) => (\n  <article className=\"col-12 col-md-6 col-xl-3 my-2 align-self-stretch\">\n    <div className=\"border p-4 h-100 d-flex flex-column\">\n      <h2 className=\"font-weight-lighter flex-fill\">\n        <Link to={`/users/${user.id}`}>{user.name}</Link>\n      </h2>\n      <Link to={`/users/${user.id}/posts`} className=\"mt-2\">{user.posts.length} Posts Â»</Link>\n    </div>\n  </article>\n);\n\nexport default Card;\n","export const deletePost = ignoreAbortError(deletePostDelegate);\nexport const fetchUsersWithPosts = ignoreAbortError(\n  fetchUsersWithPostsDelegate\n);\nexport const fetchUserWithPosts = ignoreAbortError(fetchUserWithPostsDelegate);\n\nfunction ignoreAbortError(delegate) {\n  return async (...delegateArguments) => {\n    try {\n      return await delegate.apply(null, delegateArguments);\n    } catch (error) {\n      if (error.name !== \"AbortError\") {\n        throw error;\n      }\n    }\n  };\n}\n\nasync function deletePostDelegate(postId, signal) {\n  const url = `https://jsonplaceholder.typicode.com/posts/${postId}`;\n  const response = await fetch(url, { method: \"DELETE\", signal });\n  return response.json();\n}\n\nasync function fetchUserWithPostsDelegate(userId, signal) {\n  const url = `https://jsonplaceholder.typicode.com/users/${userId}`;\n  const response = await fetch(url, { signal });\n  if (response.status !== 200) {\n    throw new Error(`User not found with ID: ${userId}`);\n  }\n  const user = await response.json();\n  user.posts = await fetchPostsForUser(userId, signal);\n  return user;\n}\n\nasync function fetchUsersWithPostsDelegate(signal) {\n  try {\n    const users = await fetchUsers(signal);\n    return await Promise.all(\n      users.map((user) =>\n        fetchPostsForUser(user.id, signal).then((posts) => {\n          user.posts = posts;\n          return user;\n        })\n      )\n    );\n  } catch (error) {\n    if (error.name !== \"AbortError\") {\n      throw error;\n    }\n  }\n}\n\nasync function fetchUsers(signal) {\n  const url = `https://jsonplaceholder.typicode.com/users`;\n  const response = await fetch(url, { signal });\n  return response.json();\n}\n\nasync function fetchPostsForUser(userId, signal) {\n  const url = `https://jsonplaceholder.typicode.com/posts?userId=${userId}`;\n  const response = await fetch(url, { signal });\n  return response.json();\n}\n","import React from \"react\";\n\nexport const ErrorMessage = ({ error, children }) => (\n  <main className=\"container\">\n    <p style={{ color: \"red\" }}>ERROR: {error.message}</p>\n    {children}\n  </main>\n);\n\nexport default ErrorMessage;\n","import React, { useEffect, useState } from \"react\";\nimport Card from \"./Card\";\n\nimport { fetchUsersWithPosts } from \"../api\";\nimport ErrorMessage from \"../common/ErrorMessage\";\n\nexport const CardList = () => {\n  const [users, setUsers] = useState([]);\n  const [error, setError] = useState(undefined);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    fetchUsersWithPosts(abortController.signal).then(setUsers).catch(setError);\n\n    return () => abortController.abort();\n  }, []);\n\n  if (error) {\n    return <ErrorMessage error={error} />;\n  }\n\n  const list = users.map((user) => <Card key={user.id} user={user} />);\n\n  return (\n    <main className=\"container\">\n      <section className=\"row\">{list}</section>\n    </main>\n  );\n};\n\nexport default CardList;\n","import React from \"react\";\n\nexport const UserProfile = ({ user }) => {\n  return (\n    <div\n      className=\"tab-pane active pt-2\"\n      role=\"tabpanel\"\n      aria-labelledby=\"profle-tab\"\n    >\n      <div className=\"row\">\n        <div className=\"col-sm-3 col-md-2 col-5\">\n          <label>User Name</label>\n        </div>\n        <div className=\"col-md-8 col-6\">{user.username}</div>\n      </div>\n      <hr />\n      <div className=\"row\">\n        <div className=\"col-sm-3 col-md-2 col-5\">\n          <label>EMail</label>\n        </div>\n        <div className=\"col-md-8 col-6\">{user.email}</div>\n      </div>\n      <hr />\n      <div className=\"row\">\n        <div className=\"col-sm-3 col-md-2 col-5\">\n          <label>Phone</label>\n        </div>\n        <div className=\"col-md-8 col-6\">{user.phone}</div>\n      </div>\n      <hr />\n      <div className=\"row\">\n        <div className=\"col-sm-3 col-md-2 col-5\">\n          <label>Company</label>\n        </div>\n        <div className=\"col-md-8 col-6\">{(user.company || {}).name}</div>\n      </div>\n      <hr />\n      <div className=\"row\">\n        <div className=\"col-sm-3 col-md-2 col-5\">\n          <label>Website</label>\n        </div>\n        <div className=\"col-md-8 col-6\">{user.website}</div>\n      </div>\n      <hr />\n    </div>\n  );\n};\n\nexport default UserProfile;\n","import React from \"react\";\n\nexport const NoPostSelectedMessage = () => (\n  <article className=\"col-12 border p-4\">\n    <p className=\"mb-0\">No post selected...</p>\n  </article>\n);\n\nexport default NoPostSelectedMessage;\n","import React from \"react\";\n\nimport { deletePost } from \"../api\";\n\nimport NoPostSelectedMessage from \"./NoPostSelectedMessage\";\n\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\n\nexport const Post = ({ posts }) => {\n  const { params: {postId} } = useRouteMatch(); // TODO: This ID will need to be pulled from parameters.\n  const post = posts.find((post) => post.id === Number(postId));\n  const history = useHistory();\n\n  const handleDelete = async (id) => {\n    const result = window.confirm(\"Are you sure you want to delete this post?\");\n    if (result) {\n      await deletePost(id);\n      // TODO: After the post is deleted, send the user to the home page.\n      history.push(\"/\");\n    }\n  };\n\n  if (post) {\n    return (\n      <article className=\"col-12 p-4 border\">\n        <h3 className=\"display-4 mb-4\">{post.title}</h3>\n        <p>{post.body}</p>\n        <button className=\"btn btn-danger\" onClick={handleDelete}>\n          Delete Post\n        </button>\n      </article>\n    );\n  }\n  return <NoPostSelectedMessage />;\n};\n\nexport default Post;\n","import React from \"react\";\nimport { useRouteMatch, Link } from \"react-router-dom\";\n\n\n/*\n  TODO: Change the below to be a link that goes to the specific post route using the post id.\n*/\n\nexport const PostLink = ({ post }) => {\n  const { url } = useRouteMatch();\n  return (\n    <li className=\"list-group-item text-truncate\">\n      <Link to={`${url}/${post.id}`}>{post.title}</Link>\n    </li>\n  );\n};\n\nexport default PostLink;\n","import React from \"react\";\n\nimport Post from \"./Post\";\nimport PostLink from \"./PostLink\";\nimport NoPostSelectedMessage from \"./NoPostSelectedMessage\";\nimport { Route, Switch, useRouteMatch } from \"react-router-dom\";\n\n/*\n  TODO: Update the below so that the components show on the appropriate route.\n\n  The <NoPostSelectedMessage /> component should show up on the following route:\n  /users/:userId/posts\n\n  The <Post /> component should show up on the following route:\n  /users/:userId/posts/:postId\n*/\n\nexport const PostList = ({ posts }) => {\n  const postLinks = posts.map((post) => (\n    <PostLink key={post.id} userId={post.userId} post={post} />\n  ));\n  const { url, params: {postId} } = useRouteMatch();\n  \n  return (\n    <div className=\"row pt-2\">\n      <div className=\"col-3\">\n        <ul className=\"list-group\">{postLinks}</ul>\n      </div>\n      <div className=\"col-9\">\n        <Switch>\n          <Route path={`${url}/:postId`}>\n            <Post posts={posts} />\n          </Route>\n          <Route path={url}>\n            <NoPostSelectedMessage />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport default PostList;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// TODO: Change the link below to go back to the home page.\n\nexport const PostsNav = () => (\n  <nav aria-label=\"breadcrumb\">\n    <ol className=\"breadcrumb\">\n      <li className=\"breadcrumb-item\">\n        <Link to={'/'} className=\"btn btn-link\">Go Home</Link>\n      </li>\n    </ol>\n  </nav>\n);\n\nexport default PostsNav;\n","import React, { useEffect, useState } from \"react\";\nimport UserProfile from \"./UserProfile\";\nimport { fetchUserWithPosts } from \"../api\";\nimport PostList from \"./PostList\";\nimport PostsNav from \"./PostsNav\";\nimport ErrorMessage from \"../common/ErrorMessage\";\nimport { useRouteMatch, Link, Route } from \"react-router-dom\";\n\nexport const User = () => {\n  const [user, setUser] = useState({ posts: [] });\n  const [error, setError] = useState(undefined);\n  const { params: {userId}, url } = useRouteMatch(); // TODO: This ID will need to be pulled from parameters.\n  \n  useEffect(() => {\n    const abortController = new AbortController();\n    fetchUserWithPosts(userId, abortController.signal)\n      .then(setUser)\n      .catch(setError);\n\n    return () => abortController.abort();\n  }, [userId]);\n\n  // TODO: Change the link below to go back to the home page.\n\n  if (error) {\n    return (\n      <ErrorMessage error={error}>\n        <p>\n          <Link to={\"/\"}>Return Home</Link>\n        </p>\n      </ErrorMessage>\n    );\n  }\n\n  /*\n    TODO: In the below section, update the links to work appropriately with React Router.\n\n    TODO: You'll need to add nested routes below.\n\n    The <PostList /> component should show on the following route:\n    /users/:userId/posts\n\n    The <UserProfile /> component should show on the following route:\n    /users/:userId\n  */\n  return (\n    <section className=\"container\">\n      <PostsNav />\n      <div className=\"border p-4 h-100 d-flex flex-column\">\n        <h2 className=\"mb-3\">{user.name}</h2>\n        <ul className=\"nav nav-tabs\">\n          <li className=\"nav-item\">\n            <Link to={url} className=\"nav-link\">Profile</Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to={`${url}/posts`} className=\"nav-link\">Posts</Link>\n          </li>\n        </ul>\n\n        {user.id ? (\n          <div className=\"p-4 border border-top-0\">\n            <Route path={`${url}/posts`}>\n              <PostList posts={user.posts} />\n            </Route>\n            <Route path={url}>\n              <UserProfile user={user} />\n            </Route>\n          </div>\n        ) : (\n          <div className=\"p-4 border border-top-0\">\n            <p>Loading...</p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default User;\n","import React, { Fragment } from \"react\";\n\nimport Header from \"./common/Header\";\nimport NotFound from \"./common/NotFound\";\nimport CardList from \"./home/CardList\";\nimport User from \"./user/User\";\nimport { Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  /*\n    TODO: There is no need to add a <Router >, it is in index.js.\n\n    The <CardList /> component should be shown when the user is on the index path.\n\n    The <User /> component should be shown when the user is on the following path:\n    /users/:userId\n\n    Display <NotFound /> when appropriate\n  */\n\n  return (\n    <Fragment>\n      <Header />\n\n      <Switch>\n        <Route path={\"/users/:userId\"}>\n          <User />\n        </Route>\n\n        <Route exact path={\"/\"}>\n          <CardList />\n        </Route>\n\n        <Route>\n          <NotFound />\n        </Route>\n      </Switch>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./bootstrap.min.css\";\nimport \"./style.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}